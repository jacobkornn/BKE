// Function to fetch account names by IDs from PowerApps Dataverse using Xrm.WebApi.retrieveMultipleRecords
async function getAccountNamesByIds(selectedItemIds) {
    const entityLogicalName = "account";
    const filter = selectedItemIds.map(id => `accountid eq ${id}`).join(" or ");
    const options = `?$select=name&$filter=${filter}`;

    try {
        const result = await Xrm.WebApi.retrieveMultipleRecords(entityLogicalName, options);
        const accountNames = result.entities.map(account => account.name);
        return accountNames;
    } catch (error) {
        console.error("Error:", error);
        return ["Unknown Account"];
    }
}

function openCustomPagePane() {
    console.log("Inside the openCustomPagePane function")
    var pageInput = {
      pageType: "custom",
      name: "new_tagbulkedit_777ed"
    };
  
    var navigationOptions = {
      target: 2, // 2 for side pane
      position: 1, // 1 for right side
      width: { value: 300, unit: "px" } // Width of the side pane
    };
  
    Xrm.Navigation.navigateTo(pageInput, navigationOptions).then(function () {
        console.log("Page successfully opened")
      // Called when the page opens
    }).catch(function (error) {
      // Handle any errors
      console.log("Page open not successful");
    });
  }
  
// Function to handle selected item IDs
async function handleSelectedItems(selectedItemIds) {
    // Check if the selectedItemIds array is not empty
    if (selectedItemIds && selectedItemIds.length > 0) {
        const accountNames = await getAccountNamesByIds(selectedItemIds);
        console.log("Selected Item IDs:", selectedItemIds, "Account Names:", accountNames);
        openCustomPagePane();

    } else {
        console.log("No items selected.");
    }
}