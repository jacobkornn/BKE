async function saveSelectedAccounts(selectedItemIds) {
    var entity = {
        "new_selecteditemsguids": selectedItemIds.join(", ")
    };
    try {
        // Retrieve the row in the 'new_selecteditems' table where new_selecteditemsid equals the specified value.
        // The specified GUID value is the first row in the new_selecteditems table, dedicated to account entities only.
        let existingRecords = await Xrm.WebApi.retrieveMultipleRecords("new_selecteditems", "?$filter=new_selecteditemsid eq '4c6a2b28-b909-f011-bae3-000d3a9857fe'");
    
        if (existingRecords.entities.length > 0) {
            // Update the row that matches the filter
            let recordId = existingRecords.entities[0].new_selecteditemsid;
            await Xrm.WebApi.updateRecord("new_selecteditems", recordId, entity);
            console.log("Record updated with ID: " + recordId);
        } else {
            console.log("No records found with the specified filter.");
        }
    } catch (error) {
        console.error("Error updating selected accounts:", error);
    }
}

function openCustomPane(selectedItemIds) {
    // Store the selected item IDs in a global variable

    Xrm.App.sidePanes.createPane({
        hideHeader: true,
        canClose: true,
        id: "TagPane"
    }).then((pane) => {
        pane.navigate({
            pageType: "custom",
            name: "new_selecttag_9e742"
        });
    });
}

// Function to handle selected item IDs
async function handleSelectedItems(selectedItemIds) {
    // Check if the selectedItemIds array is not empty
    if (selectedItemIds && selectedItemIds.length > 0) {
        saveSelectedAccounts(selectedItemIds);
        openCustomPane(selectedItemIds);
    } else {
        console.log("No items selected.");
    }
}